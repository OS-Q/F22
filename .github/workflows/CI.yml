name: CI

# on:
#   schedule:
#     - cron: "0 13 * * *"
on:
  push:
    branches:
      - master

env:
  UPLOAD_BUILD: true

jobs:
  # Check:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out
  #     uses: actions/checkout@v2
  #     with:
  #       submodules: "recursive"

  #   - name: cppcheck
  #     uses: Qful/check-action@master
  #     with:
  #       github_token: ${{ secrets.OSQ_REPO_TOKEN }}
  #       enable: all
  #       inconclusive: disable
  #       inline_suppression: disable
  #       force_language: c
  #       force: enable
  #       max_ctu_depth: 2
  #       std: c11
  #       output_file: ./codecheck.txt
  #       other_options: --bug-hunting --verbose --std=c11

  #   - name: report
  #     uses: Qful/check-action@master
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
  #       BRANCH_NAME: 'master'

  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: code_check_report
  #       path: codecheck.txt

  templete:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        template: ["A","B"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          qio platform install https://github.com/OS-Q/P22/archive/master.zip

      - name: Checkout templete
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1
          repository: OS-Q/F22${{ matrix.template }}
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: ${{ matrix.template }}

      - name: Build templete
        if: success()
        run: |
          qio run -d ${{ matrix.template }}
          cp -rf ${{ matrix.template }}/.pio/build/**/*.bin build

      - name: output firmware
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: firmware_${{ matrix.template }}
          path: build

      - name: Setup Folder
        if: success()
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: upload firmware
        if: success()
        run: |
          zip -r F22${{ matrix.template }}.zip build
          ossutil cp F22${{ matrix.template }}.zip ${{ secrets.OSS_P_Q_BUCKET }} -f
